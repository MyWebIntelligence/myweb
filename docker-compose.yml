services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: mwi_user
      POSTGRES_PASSWORD: mwi_password
      POSTGRES_DB: mwi_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mwi_user -d mwi_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]

  mywebintelligenceapi:
    build:
      context: ./MyWebIntelligenceAPI
      dockerfile: Dockerfile
    container_name: mywebintelligenceapi
    env_file:
      - ./MyWebIntelligenceAPI/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://mwi_user:mwi_password@db:5432/mwi_db
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
      CELERY_AUTOSCALE: ${CELERY_AUTOSCALE:-}
    volumes:
      - ./MyWebIntelligenceAPI:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000

  celery_worker:
    build:
      context: ./MyWebIntelligenceAPI
      dockerfile: Dockerfile
    env_file:
      - ./MyWebIntelligenceAPI/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DATABASE_URL: postgresql+asyncpg://mwi_user:mwi_password@db:5432/mwi_db
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
      CELERY_AUTOSCALE: ${CELERY_AUTOSCALE:-}
    volumes:
      - ./MyWebIntelligenceAPI:/app
    command: celery -A app.core.celery_app worker --loglevel=info

volumes:
  postgres_data:
